{"version":3,"sources":["../../src/utils/config.js"],"names":["env","process","STAGE_ENV","Config","category","moduleName","controller","action","version","soa","token","plugin","result","router","jsConfig","Array","isArray","p","j","push","cssConfig","c","conf","timeout","successCode","key","toLowerCase","middleware"],"mappings":"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","file":"config.js","sourcesContent":["/**\n * desc:获取配置项\n */\n\nimport md5 from 'md5'\nimport staticConfs from '../../configs/static.json'\nimport appConfs from '../../configs/app.json'\nimport apiConfs from '../../configs/api.json'\nimport wechatConfs from '../../configs/wechat.json'\n\n/**\n * 获取阶段环境全局变量，这个变量的设置方法：\n * 进入命令行，set STAGE_ENV=dev 这样就将STAGE_ENV设置成了dev，可以有如下值：dev | test | sim | prod\n */\nlet env = process.env.STAGE_ENV\n\n/**\n * desc:创建config配置的类\n */\nclass Config {\n  constructor () {}\n  /**\n   * desc:获取静态资源路径的方法\n   * @param  {} category\n   */\n  static getStatic (category) {\n    return staticConfs['prefix'] + staticConfs[category]\n  }\n  /**\n   * desc:获取静态资源路径的方法\n   * @param  {} name\n   * @param  {} key\n   */\n  static getApi (moduleName, controller, action) {\n    return `${apiConfs[moduleName][\"domain\"][env]}/${apiConfs[moduleName][controller][action]}`\n  }\n\n  /**\n  * desc:获取当前域名\n  * @param  {} name\n  * @param  {} key\n  */\n  static getDomain () {\n    return apiConfs['domain'][env]\n  }\n\n  /**\n   * desc:获取整个应用当前版本\n   */\n  static getAppVersion () {\n    return appConfs.version\n  }\n\n  /**\n   * desc 获取请求service token\n   */\n  static getServiceToken () {\n    return md5(appConfs.soa.token);\n  }\n\n  /**\n   * desc:获取公共插件的js\n   * @param  {Array} plugin\n   */\n  static getPluginJs (plugin) {\n    let result = []\n    let router = staticConfs['prefix'][env] + staticConfs['util']\n    let jsConfig = staticConfs['pluginJs']\n    if (Array.isArray(plugin)) {\n      for (let p of plugin) {\n        if (jsConfig[p]) {\n          for (let j of jsConfig[p]) {\n            result.push(router + j)\n          }\n        }\n      }\n    }\n    return result\n  }\n\n  /**\n   * desc:获取公共插件的css\n   * @param  {Array} plugin\n   */\n  static getPluginCss (plugin) {\n    let result = []\n    let router = staticConfs['prefix'][env] + staticConfs['util']\n    let cssConfig = staticConfs['pluginCss']\n    if (Array.isArray(plugin)) {\n      for (let p of plugin) {\n        if (cssConfig[p]) {\n          for (let c of cssConfig[p]) {\n            result.push(router + c)\n          }\n        }\n      }\n    }\n    return result\n  }\n  /**\n   * desc:获取SOA配置\n   */\n  static getSoaConf () {\n    let conf = appConfs['SOA'] || { timeout: 60000, successCode: 200 }\n    for (let key in conf) {\n      if (!conf[key]) {\n        if (key.toLowerCase() == 'timeout') conf[key] = 60000\n        if (key.toLowerCase() == 'successCode') conf[key] = 200\n      }\n    }\n    return conf\n  }\n\n  /**\n   * desc:获取中间件配置\n   */\n  static getMiddlewares () {\n    return appConfs.middleware\n  }\n\n  /**\n   * desc:获取微信的配置信息\n   */\n  static getWechat () {\n    return wechatConfs\n  }\n}\nexport default Config\n"]}