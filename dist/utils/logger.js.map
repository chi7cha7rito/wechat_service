{"version":3,"sources":["../../src/utils/logger.js"],"names":["appName","appenders","baseDir","join","__dirname","existsSync","mkdirSync","logDir","a","type","dir","filename","configure","LoggerUtil","info","loggerInfo","error","loggerError","warn","loggerWarn","getLogger"],"mappings":";;;;;;;;;;;;;;;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,UAAU,cAAQ,MAAR,CAAd;;AAEA;AAZA;;;;AAaA,IAAIC,YAAY,iBAAQA,SAAxB;AACA,IAAIA,SAAJ,EAAe;AACX,QAAIC,UAAU,eAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,MAAvC,CAAd;AACA,QAAI,CAAC,aAAGC,UAAH,CAAcH,OAAd,CAAL,EAA6B;AACzB,qBAAGI,SAAH,CAAaJ,OAAb;AACH;;AAED,QAAIK,SAAS,eAAKJ,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,MAAvC,EAA+CJ,OAA/C,CAAb;AACA,QAAI,CAAC,aAAGK,UAAH,CAAcE,MAAd,CAAL,EAA4B;AACxB,qBAAGD,SAAH,CAAaC,MAAb;AACH;AATU;AAAA;AAAA;;AAAA;AAUX,wDAAcN,SAAd,4GAAyB;AAAA,gBAAhBO,CAAgB;;AACrB,gBAAIA,EAAEC,IAAF,IAAUD,EAAEC,IAAF,IAAU,UAAxB,EAAoC;AAChC,oBAAIC,MAAM,eAAKP,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiCI,EAAEG,QAAnC,CAAV;AACA,oBAAI,CAAC,aAAGN,UAAH,CAAcK,GAAd,CAAL,EAAyB;AACrB,iCAAGJ,SAAH,CAAaI,GAAb;AACH;AACJ;AACJ;AAjBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBd;;AAED;AACA,iBAAOE,SAAP;;AAEA;;;;IAGMC,U;AACF,0BAAc;AAAA;AAEb;;AAED;;;;;;;;;AAOA;;;;6BAIYC,K,EAAM;AACd,gBAAIA,KAAJ,EAAU,KAAKC,UAAL,CAAgBD,IAAhB,CAAqBA,KAArB;AACb;;AAED;;;;;;;8BAIaE,M,EAAO;AAChB,gBAAIA,MAAJ,EAAW,KAAKC,WAAL,CAAiBD,KAAjB,CAAuBA,MAAvB;AACd;AACD;;;;;;;6BAIYE,K,EAAM;AACd,gBAAIA,KAAJ,EAAU,KAAKC,UAAL,CAAgBD,IAAhB,CAAqBA,KAArB;AACb;;;;;AAjCCL,U,CAQKE,U,GAAa,iBAAOK,SAAP,CAAiB,MAAjB,C;AARlBP,U,CASKI,W,GAAc,iBAAOG,SAAP,CAAiB,OAAjB,C;AATnBP,U,CAUKM,U,GAAa,iBAAOC,SAAP,CAAiB,MAAjB,C;kBA0BTP,U","file":"logger.js","sourcesContent":["/**\n * author:luwei@lifang.com\n * desc:logger工具类\n */\nimport path from \"path\";\nimport fs from \"fs\";\nimport log4js from \"log4js\";\nimport logConf from \"../../configs/log4js.json\";\nimport appConf from \"../../configs/app.json\";\n\nlet appName = appConf[\"name\"];\n\n//创建log的目录\nlet appenders = logConf.appenders;\nif (appenders) {\n    let baseDir = path.join(__dirname, \"..\", \"..\", \"..\", \"logs\");\n    if (!fs.existsSync(baseDir)) {\n        fs.mkdirSync(baseDir);\n    }\n\n    let logDir = path.join(__dirname, \"..\", \"..\", \"..\", \"logs\", appName);\n    if (!fs.existsSync(logDir)) {\n        fs.mkdirSync(logDir);\n    }\n    for (let a of appenders) {\n        if (a.type && a.type == \"dateFile\") {\n            let dir = path.join(__dirname, \"..\", \"..\", a.filename);\n            if (!fs.existsSync(dir)) {\n                fs.mkdirSync(dir);\n            }\n        }\n    }\n}\n\n//加载log4js的配置\nlog4js.configure(logConf);\n\n/**\n * desc:logger工具类\n */\nclass LoggerUtil {\n    constructor() {\n\n    }\n\n    /**\n     * 获取不同类型logger的实例\n     */\n    static loggerInfo = log4js.getLogger('info');\n    static loggerError = log4js.getLogger('error');\n    static loggerWarn = log4js.getLogger('warn');\n\n    /**\n     * desc:记录info\n     * @param  {String} info\n     */\n    static info(info) {\n        if (info) this.loggerInfo.info(info);\n    }\n\n    /**\n     * desc:记录error\n     * @param  {String} error\n     */\n    static error(error) {\n        if (error) this.loggerError.error(error);\n    }\n    /**\n     * desc:记录warning\n     * @param  {String} warn\n     */\n    static warn(warn) {\n        if (warn) this.loggerWarn.warn(warn);\n    }\n}\n\nexport default LoggerUtil;\n\n"]}