{"version":3,"sources":["../../../src/routers/api/match.js"],"names":["router","Router","get","req","res","next","pageIndex","query","pageSize","requestHelper","applyOnline","status","startClosing","format","resp","json","error","memberId","session","user","member","id","post","matchId","body","matchPriceId","module","exports"],"mappings":"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","file":"match.js","sourcesContent":["/**\n * desc:比赛相关的api 定义\n */\n\nimport express from 'express'\nimport logger from '../../utils/logger'\nimport moment from 'moment'\nlet router = express.Router()\n\n/**\n * 获取在线报名赛事信息\n */\nrouter.get(\"/getOnline\",async (req,res,next)=>{\n    try{\n        let pageIndex=req.query.pageIndex\n        let pageSize=req.query.pageSize\n\n        let resp=await requestHelper.get({\n            \"moduleName\":\"hulk_service\",\n            \"controller\":\"match\",\n            \"action\":\"find\",\n            \"data\":{\n               applyOnline:true,\n               status:1,\n               startClosing:moment().format(),\n               pageIndex,\n               pageSize\n            }\n        })\n\n        res.json(resp)\n\n    }catch(e){\n        logger.error(`api_match_get_error=>${e}`)\n    }\n})\n\n/**\n * 获取在线报名赛事信息\n */\nrouter.get(\"/getAll\",async (req,res,next)=>{\n    try{\n        let pageIndex=req.query.pageIndex\n        let pageSize=req.query.pageSize\n\n        let resp=await requestHelper.get({\n            \"moduleName\":\"hulk_service\",\n            \"controller\":\"match\",\n            \"action\":\"find\",\n            \"data\":{\n               status:1,\n               startClosing:moment().format(),\n               pageIndex,\n               pageSize\n            }\n        })\n\n        res.json(resp)\n\n    }catch(e){\n        logger.error(`api_match_get_error=>${e}`)\n    }\n})\n\n/**\n * 获取比赛结果\n */\nrouter.get(\"/result\",async (req,res,next)=>{\n    try{\n        let pageIndex=req.query.pageIndex\n        let pageSize=req.query.pageSize\n        let memberId=req.session.user.member.id\n\n        let resp=await requestHelper.get({\n            \"moduleName\":\"hulk_service\",\n            \"controller\":\"match\",\n            \"action\":\"result\",\n            \"data\":{\n               pageIndex,\n               pageSize,\n               memberId\n            }\n        })\n\n        res.json(resp)\n\n    }catch(e){\n        logger.error(`api_match_result_error=>${e}`)\n    }\n})\n\n/**\n * 报名参赛\n */\nrouter.post(\"/apply\",async (req,res,next)=>{\n    try{\n        let memberId=req.session.user.member.id\n        let matchId = req.body.matchId\n        let matchPriceId = req.body.matchPriceId\n        let resp=await requestHelper.post({\n            \"moduleName\":\"hulk_service\",\n            \"controller\":\"match\",\n            \"action\":\"apply\",\n            \"data\":{\n               memberId,\n               matchId,\n               matchPriceId\n            }\n        })\n\n        res.json(resp);\n\n    }catch(e){\n        logger.error(`api_match_apply_error=>${e}`)\n    }\n})\n\nmodule.exports = router"]}