{"version":3,"sources":["../../../src/routers/api/wechat.js"],"names":["router","Router","wechatConfig","getWechat","payment","Payment","appid","mch_id","partnerKey","host","post","req","res","next","respData","getBrandWCPayRequestParams","order","resolve","reject","err","payargs","memberId","session","user","member","id","notify_url","body","name","attach","total_fee","price","spbill_create_ip","openid","wechat","wechatOpenId","out_trade_no","Date","valueOf","trade_type","data","resp","requestHelper","nonce_str","json","error","status","message","module","exports"],"mappings":"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","file":"wechat.js","sourcesContent":["/**\n * desc:账户相关的api 定义\n */\n\nimport express from 'express'\nimport logger from '../../utils/logger';\nimport config from '../../utils/config';\nimport wechatPay from 'wechat-pay';\n\nlet router = express.Router()\n\nlet wechatConfig = config.getWechat();\n\n//wechat pay unifiedorder 基本参数\nlet payment = new wechatPay.Payment({\n  \"appId\": wechatConfig.appid,\n  \"mchId\": wechatConfig.mch_id,\n  \"partnerKey\": wechatConfig.partnerKey,\n  \"notifyUrl\": `${wechatConfig.host}/wechat/notify`\n})\n\n/**\n * desc:微信支付调用统一下单接口，获取prepay_id\n * @see https://api.mch.weixin.qq.com/pay/unifiedorder\n */\nrouter.post(\"/getPrePayInfo\", async (req, res, next) => {\n  let respData = {\n    \"status\": \"1\",\n    \"message\": \"\",\n    \"data\": null\n  }\n  try {\n    let memberId = req.session.user.member.id;\n    let appid = wechatConfig.appid;\n    let mch_id = wechatConfig.mch_id;\n    let notify_url = wechatConfig.host + '/wechat/notify';\n    let body = req.body.name;\n    let attach = req.session.user.member.id;\n    let total_fee = req.body.price * 100;\n    let spbill_create_ip = \"127.0.0.1\";\n    let openid = req.session.user.member.wechat.wechatOpenId; //从 session 获取open_id\n    let out_trade_no = req.session.user.member.id + '_' + (new Date().valueOf());\n    let trade_type = \"JSAPI\";\n\n    let order = {\n      body,\n      attach,\n      out_trade_no,\n      total_fee,\n      spbill_create_ip,\n      openid,\n      trade_type\n    }\n    let payargs = await getBrandWCPayRequestParams(order);\n    respData.data = payargs;\n\n    //添加一条wechatPayment 记录\n    let resp = requestHelper.post({\n      \"moduleName\": \"hulk_service\",\n      \"controller\": \"wechatPayment\",\n      \"action\": \"create\",\n      \"data\": {\n        memberId,\n        appid,\n        body,\n        mch_id,\n        notify_url,\n        openid,\n        out_trade_no,\n        spbill_create_ip,\n        total_fee,\n        trade_type,\n        attach,\n        nonce_str: payargs.nonce_str\n      }\n    })\n\n\n    return res.json(respData);\n\n    function getBrandWCPayRequestParams(order) {\n      return new Promise((resolve, reject) => {\n        payment.getBrandWCPayRequestParams(order, function (err, payargs) {\n          if (err) { reject(err) };\n          resolve(payargs);\n        });\n      })\n    }\n\n  } catch (e) {\n    logger.error(\"wechat_getPrePayInfo_error:\" + JSON.stringify(e));\n    respData.status = \"0\";\n    respData.message = \"获取统一下单信息失败\";\n    respData.data = null;\n    res.json(respData);\n  }\n})\n\n\nmodule.exports = router"]}